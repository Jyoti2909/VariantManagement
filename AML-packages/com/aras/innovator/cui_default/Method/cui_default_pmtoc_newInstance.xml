<AML>
 <Item type="Method" id="3EA9FA2C3D934B3196E04CDD71453137" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[const itemTypeId = options.currentTarget.itemTypeId;
const item = aras.getItemTypeName(itemTypeId);
if (item === 'GAG_MechanicalPart') {
	const formData = aras.getItemByName(
		'Form',
		'GAG_SelectClassificationDialog'
	);
	const formId = formData.getAttribute('id');

	const tempItemForForm = aras.newIOMItem('DialogContext');

	const dialogParameters = {
		title: 'Select classification',
		formId: formId,
		aras: aras,
		item: tempItemForForm,
		itemType: tempItemForForm.getType(),
		itemTypeNd: aras.getItemTypeByFormID(formId),
		parentWindow: window,
		dialogWidth: aras.getItemProperty(formData, 'width'),
		dialogHeight: aras.getItemProperty(formData, 'height'),
		content: 'ShowFormAsADialog.html',
	};

	window.ArasModules.Dialog.show('iframe', dialogParameters).promise.then(
		(classification) => {
			if (classification) {
				const newItem = aras.newItem;
				try {
					aras.newItem = (itemTypeName) => {
						aras.newItem = newItem;
						const args = {
							classification: classification,
						};
						const result = aras.newItem(itemTypeName, null, args);
						return result;
					};
					return aras.uiNewItemExAsync(itemTypeId).then(() => {
						this._hideIfNotPinned();
					});
				} finally {
					aras.newItem = newItem;
				}
			}
		}
	);
} else {
	return aras.uiNewItemExAsync(itemTypeId);
}]]></method_code>
  <method_type>JavaScript</method_type>
  <name>cui_default_pmtoc_newInstance</name>
 </Item>
</AML>