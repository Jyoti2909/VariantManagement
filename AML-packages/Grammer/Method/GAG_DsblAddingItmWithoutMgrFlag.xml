<AML>
 <Item type="Method" id="BC9316D59076404D994E5DED54A7C2B0" action="add">
  <comments />
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[
			var dal = new DataAccessLayer(this.getInnovator(), CCO);
			BusinessLogic businessLogic = new BusinessLogic(dal);
			return businessLogic.Run(this);
}

		//[PartialPath("BusinessLogic/BusinessLogic")]
		internal class BusinessLogic
		{
			private const string FlagPropertyName = "gag_migration_edit_flag";

			private readonly IDataAccessLayer _dal;

			public BusinessLogic(IDataAccessLayer dataAccessLayer)
			{
				_dal = dataAccessLayer;
			}

			public Item Run(Item contextItem)
			{
				string relatedId = contextItem.getRelatedItemID();
				string migrationFlagValue = GetMigrationFlagValue(relatedId);
				if (string.IsNullOrWhiteSpace(migrationFlagValue))
				{
					throw new ItemException(_dal.NewError("Unknown flag value"));
				}

				return migrationFlagValue == "0"
					? throw new ItemException(_dal.NewError($"An item with the {FlagPropertyName} value of 0 cannot be added."))
					: contextItem;
			}

			private string GetMigrationFlagValue(string relatedId)
			{
				Item relatedItem = _dal.NewItem("GAG_GrammerChangeControlled", "get");
				relatedItem.setID(relatedId);
				relatedItem.setAttribute("select", FlagPropertyName);
				relatedItem = _dal.ApplyItem(relatedItem);
				Contract.ThrowIfError(relatedItem);
				return relatedItem.getProperty(FlagPropertyName);
			}]]></method_code>
  <method_type>C#</method_type>
  <name>GAG_DsblAddingItmWithoutMgrFlag</name>
 </Item>
</AML>