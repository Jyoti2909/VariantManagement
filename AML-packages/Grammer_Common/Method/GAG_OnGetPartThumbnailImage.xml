<AML>
 <Item type="Method" id="4C9FCBB74D9F417EAC632C16A90DBD3D" action="add">
  <comments />
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[			IDataAccessLayer dataAccessLayer = new DataAccessLayer(this.getInnovator(), CCO);
			BusinessLogic businessLogic = new BusinessLogic(dataAccessLayer);
			return businessLogic.Run(this);
}

		//[PartialPath("BusinessLogic/BusinessLogic")]
		internal class BusinessLogic
		{
			private readonly IDataAccessLayer _dal;

			public BusinessLogic(IDataAccessLayer dataAccessLayer)
			{
				_dal = dataAccessLayer;
			}

			public Item Run(Item contextItem)
			{
				try
				{
					int length = contextItem.getItemCount();
					for (int i = 0; i < length; i++)
					{
						ProcessItem(contextItem.getItemByIndex(i));
					}
					
					return contextItem;
				}
				catch (ItemException e)
				{
					return e.ErrorItem;
				}
			}

			void ProcessItem(Item item)
			{
				const string defaultThumbnailValue = "vault:///?fileId=";
				if (item.getProperty("thumbnail") != defaultThumbnailValue)
				{
					return;
				}
				Item partCads = _dal.NewItem("Part CAD", "get");
				partCads.setProperty("source_id", item.getID());
				Item cadMaster = _dal.NewItem("CAD", "get");
				cadMaster.setProperty("gag_classification", "MASTER");
				partCads.setPropertyItem("related_id", cadMaster);
				partCads = _dal.ApplyItem(partCads);
				string relatedCadThumbnail = string.Empty;
				if (partCads.getItemCount() == 1)
				{
					Item relatedCad = partCads.getPropertyItem("related_id");
					relatedCadThumbnail = relatedCad.getProperty("thumbnail");
				}

				item.setProperty("thumbnail", relatedCadThumbnail);
			}]]></method_code>
  <method_type>C#</method_type>
  <name>GAG_OnGetPartThumbnailImage</name>
 </Item>
</AML>