<AML>
 <Item type="Method" id="8289A8324A9C46AB81E70D0AEE524017" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[			BusinessLogic businessLogic = new BusinessLogic();
			return businessLogic.Run(this);
}

		//[PartialPath("BusinessLogic/BusinessLogic")]
		internal class BusinessLogic
		{
			Dictionary<string, string> colors = new Dictionary<string, string>
			{
				{"10 - Preliminary", "A5A5A5"},
				{"19 - Canceled", "6E70CC"},
				{"25 - Pre-Release In Review", "D2BD70"},
				{"28 - Pre-Release In Change", "68A9F8"},
				{"29 - Pre-Release Invalid", "6E70CC"},
				{"30 - Pre-Released", "9BD6C3"},
				{"35 - Internal Review", "D2BD70"},
				{"45 - External Review", "D2BD70"},
				{"50 - Released", "64C0A1"},
				{"60 - In Change", "68A9F8"},
				{"90 - Expired", "6E70CC"},
				{"92 - Invalid", "6E70CC"}
			};

			public Item Run(Item contextItem)
			{
				foreach (Item item in contextItem.Enumerate())
				{
					string stateLabel = item.getProperty("gag_state_label");

					if (string.IsNullOrEmpty(stateLabel) || !colors.ContainsKey(stateLabel))
					{
						continue;
					}

					string color = colors[stateLabel];
					string css = $".gag_state_label {{ background-color: #{color}; color: #FFFFFF; }}";

					item.setProperty("css", css);
				}

				return contextItem;
			}]]></method_code>
  <method_type>C#</method_type>
  <name>GAG_SetCssForState</name>
 </Item>
</AML>